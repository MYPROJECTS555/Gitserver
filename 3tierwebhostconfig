 here we are hosting 3 tier pHP web site.

  installing meria DB and PHP
  -------------------------------------------------------------------------------------------------------------------
  
  STEP :1 
 
apt-get update
apt-get upgrade

we have to create aura RDS

apt-get install apache2
------------------------------------------------------------------------------------------------------------------------------------------------
STEP -2


installing php 


#!/bin/bash
# Script to install PHP on Ubuntu (default or specific version)

# 1. Update package repository
sudo apt update && sudo apt upgrade -y

# 2. Install required tools
sudo apt install -y software-properties-common curl

# 3. Add PHP PPA for latest versions (optional, but needed for PHP 8.x newer releases)
sudo add-apt-repository -y ppa:ondrej/php
sudo apt update

# === Change this variable to your desired PHP version ===
PHP_VERSION="8.4"

# 4. Install PHP and common extensions
sudo apt install -y \
    php${PHP_VERSION} \
    php${PHP_VERSION}-cli \
    php${PHP_VERSION}-fpm \
    php${PHP_VERSION}-json \
    php${PHP_VERSION}-common \
    php${PHP_VERSION}-mysql \
    php${PHP_VERSION}-zip \
    php${PHP_VERSION}-gd \
    php${PHP_VERSION}-mbstring \
    php${PHP_VERSION}-curl \
    php${PHP_VERSION}-xml \
    php${PHP_VERSION}-bcmath \
    php-pear

# 5. For Apache users, also install PHP module and restart Apache
sudo apt install -y libapache2-mod-php${PHP_VERSION}
sudo systemctl restart apache2

# 6. For Nginx users (PHP-FPM setup)
# Uncomment if using Nginx:
# sudo systemctl enable php${PHP_VERSION}-fpm
# sudo systemctl restart nginx

# 7. Verify PHP installation
php -v

echo "âœ… PHP ${PHP_VERSION} installation completed."
--------------------------------------------------------------------------------------------------------------------------------------------------------------------------

STEP -3


once php is installed , we have to some setting

vi /etc/php/7.1/apache2/php.ini

                              php inside there is version 7.1 . go inside the version there is a one more folder apache2 and go inside it .there is one more file named php.ini
                              

                             we have to go inside php.ini file and put below 4 line command . these are instructions 
                                      

file_uploads = On                // means photo upload opting is on
allow_url_fopen = On            
memory_limit = 256M              // this is memory limit
upload_max_filesize = 100M         // maximum we can upload 100mb. if it is more upload will be rejected.
date.timezone = America/Chicago
----------------------------------------------------------------------------------------------

STEP -4

-- Here we are cloning 3 tier web application form git hub.

       git clone https://github.com/SHRIDHARMUDASHI/orangehrms.git

-- go inside orangehrms Folder
     cd  orangehrms


-- there is a zip file  
        orangehrm-4.0.zip

--  Move that zip file to  /var/www

--    once file is moved to /var/www
--     then go to that directory 
-- install unzip to extract zip file

once unzip is installed . unzip the file

       command : unzip    orangehrm-4.0.zip

-- rename the orangehrm-4.0 to orangehrm
       mv orangehrm-4.0 orangehrm

----giving permission to orangehrm folder

        chown -R  www-data:www-data  /var/www/orangehrm

----- giving permission like read ,write and executed 

       chmod  -R 755 /var/www/orangehrm 
--- creating virtual box
vi /etc/apache2/site-available/orangehrm.conf


orangehrm.conf 

enable the virtual box
and 
restart the apache 2 server
---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------





